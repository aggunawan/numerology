name: Deploy

on:
  push:
    branches: [ production ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: laravel
          MYSQL_USER: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.0'
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: laravel
        DB_USER: laravel
        DB_PASSWORD: secret
      run: vendor/bin/phpunit
    - name: Deploy to Server
      uses: garygrossgarten/github-action-ssh@release
      with:
          command: |
            cd /home/runcloud/webapps/numerology
            git checkout production
            git checkout .
            git pull origin production
            /usr/local/lsws/lsphp80/bin/php artisan optimize:clear
            /usr/local/lsws/lsphp80/bin/php /usr/sbin/composer install -q --no-dev
            /usr/local/lsws/lsphp80/bin/php /usr/sbin/composer dump-autoload -q
            /usr/local/lsws/lsphp80/bin/php artisan migrate --force
            /usr/local/lsws/lsphp80/bin/php artisan queue:restart
            npm install
            npm run prod
            /usr/local/lsws/lsphp80/bin/php artisan optimize
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          privateKey: ${{ secrets.KEY }}
